params {

        /*
        Input Files
        ---------------------------
        */
        fastq = 'data/fastq/*_{1,2}.*'
        reference = 'data/reference/*.fasta'
        md = 'data/*.md'

        /*
        Sort-Read Assemblers
        ---------------------------
        */
        //abyss
        abyss = true
        abyssKmerSize = 96
        abyssBloomSize = '2G'

        //BCALM2
        bcalm = true
        bcalmKmerSize = 31

        //GATB Minia Pipeline
        gatb_minia = true
        gatbKmerSize = '21,61,101,141,181'
        gatb_besst_iter = 10000
        gatb_error_correction = false

        //IDBA-UD
        idba = true

        //METAHIPMER2
        metahipmer2 = true
        metahipmer2KmerSize = '21,33,55,77,99'

        //Minia
        minia = true
        miniaKmerSize = 31

        //MEGAHIT
        megahit = true
        megahitKmerSize = '21,29,39,59,79,99,119,141'

        //metaSPAdes
        metaspades = true
        metaspadesKmerSize = 'auto'

        //SPAdes
        spades = true
        spadesKmerSize = 'auto'

        //SKESA
        skesa = true

        //Unicycler
        unicycler = true

        //VelvetOptimiser
        velvetoptimiser = true
        velvetoptimiser_hashs = 19
        velvetoptimiser_hashe = 31

        /*
        Assembly Quality Control
        */
        minLength = 1000
        mapped_reads_threshold = 0.75

        /*
        Quality Parameters
        */
        n_target = 0.5
        l_target = 0.9
        plot_scale = 'log'

        /* 
        Execution related defaults
        */
        // expose config as parameter
        config = 'configs/standard.config'

        // process resources defaults
        cpus = 4
        memory = {8.Gb*task.attempt}

        // max resources limits defaults
        max_cpus = 16
        max_memory = 100.GB
        max_time = 240.h
}

profiles {
        standard {includeConfig params.config}
        test {includeConfig 'configs/test.config'}
}

process {
        cpus = params.cpus
        memory = params.memory
        maxRetries = params.maxRetries
        maxForks = params.maxForks
        container = params.container
        errorStrategy = params.errorStrategy
}